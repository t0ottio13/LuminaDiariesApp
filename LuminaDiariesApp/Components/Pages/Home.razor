@using LuminaDiariesApp.Models
@using LuminaDiariesApp.Interfaces
@page "/"
@rendermode InteractiveServer
@inject IDiaryService diaryService
@inject ILogger<Home> logger
@inject IOpenAIService openAIService
@inject NavigationManager navigationManager

<PageTitle>Diary List</PageTitle>

<FluentButton Appearance="Appearance.Accent" AriaLabel="To" Href="/diary/new"
              OnClick="@LinkToCreatePage">
Create New Diary
</FluentButton>

@foreach (var diary in diariesList)
{
    <FluentCard Class="mt-3">
        <p>@diary.date.ToString("yyyy-MM-dd")</p>
        <p>@diary.content</p>
        
        @if (!string.IsNullOrWhiteSpace(diary.eulogy))
        {
            <p>AI コメント</p>
            <FluentCard>
                <p>@diary.eulogy</p>
            </FluentCard>
        }
    </FluentCard>
}

@code {
    private List<Diary> diariesList = new();
    private long userId = 1;

    protected override async Task OnInitializedAsync()
    {
        diariesList = await GetDiaries();
    }

    private async Task<List<Diary>> GetDiaries()
    {
        var diaries = await diaryService.GetDiariesAsync(userId);
        return diaries.ToList();
    }

    private void LinkToCreatePage()
    {
        navigationManager.NavigateTo("/diary/new");
    }
}
